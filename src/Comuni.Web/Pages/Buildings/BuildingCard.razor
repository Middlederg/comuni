<button type="button"
        class="flex flex-col px-3 py-2 border rounded-sm border-gray-500 @activeClass" 
        style="background-color:@Building.FirstType.Color.ToHex()"
        @onclick="BuildingSelected">
    <h1 class="flex items-center font-semibold pb-2">
        <BuildingIcon BuildingType="Building.FirstType"  />

       <span class="ml-2">
           
        @Building
           </span>
        
    </h1>
    <p class="tracking-wide font-thin text-lg">
       Level @Building.Level
    </p>
</button>

@code {
    private string activeClass = "";

    [CascadingParameter]
    public Building SelectedBuilding { get; set; }

    [Parameter]
    public Building Building { get; set; }

    [Parameter]
    public EventCallback<Building> OnBuildingSelected { get; set; }

    private async Task BuildingSelected()
    {
        SelectedBuilding = Building;
        var id1 = SelectedBuilding?.Id;
        var id2 = Building?.Id;
        Console.WriteLine(id1?.ToString() ?? "");
        Console.WriteLine(id2?.ToString() ?? "");
        Console.WriteLine(SelectedBuilding != null && SelectedBuilding.Equals(Building));

        activeClass = SelectedBuilding != null && SelectedBuilding.Equals(Building) ?
        "hover:opacity-75 hover:shadow-lg outline-black focus:outline-black" :
        "outline-none focus:outline-none";

        await OnBuildingSelected.InvokeAsync(Building);
    }
}
